<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.saeipman.app.building.mapper.BuildingMapper">
	<select id="selectBuildingList" resultType="BuildingVO">
		SELECT *
		FROM ( select rownum rn ,
					  a.*
			   FROM (SELECT building_id,
							building_name,
							doro_addr,
							details_addr,
							total_gagu
					FROM building_info
					WHERE IMDAEIN_ID = #{imdaeinId}
					ORDER BY 1 DESC
					)a
		<![CDATA[     
		where rownum <= #{pageDTO.pageNum} * #{pageDTO.amount} )b   
		
		where rn > (#{pageDTO.pageNum} -1) * #{pageDTO.amount}
		]]>
	</select>
	<!-- <select id="selectBuildingListInfo" resultType="BuildingVO">
		SELECT  b.building_id,
				b.group_id,
				b.building_name,
				b.doro_addr,
				b.jibun_addr,
				b.details_addr,
				b.gunchook_area,
				b.total_floor,
				b.floor_gagu_count,
				b.total_gagu,
				b.parking,
				b.lift_yn,
				b.delay_alert_yn,
				b.minwon_alert_yn,
				b.group_id,
				b.floor_area,
				b.building_heigh,
				b.floor_area_ratio,
				b.memo
		FROM building_info b JOIN 
		WHERE building_id = #{buildingId}
	</select> -->
	<select id="selectBuildingListInfo">
		SELECT  b.building_id,
		        b.group_id,
		        b.building_name,
		        b.doro_addr,
		        b.jibun_addr,
		        b.details_addr,
		        b.gunchook_area,
		        b.total_floor,
		        b.floor_gagu_count,
		        b.total_gagu,
		        b.parking,
		        b.lift_yn,
		        b.delay_alert_yn,
		        b.minwon_alert_yn,
		        b.group_id,
		        b.floor_area,
		        b.building_heigh,
		        b.floor_area_ratio,
		        b.memo,
		        count(c.constract_no) as constract_no,
		        count(g.gwanlibi_details_no) as gwanlibi_details_no
		FROM building_info b
		LEFT JOIN room_info r
		   ON b.building_id = r.building_id
		LEFT JOIN constract_info c
		   ON r.room_id = c.room_id
		LEFT JOIN gwanlibi_details g
		 ON b.building_id = g.building_id
		WHERE b.building_id = #{buildingId}
		 GROUP BY  b.building_id,
                b.group_id,
		        b.building_name,
		        b.doro_addr,
		        b.jibun_addr,
		        b.details_addr,
		        b.gunchook_area,
		        b.total_floor,
		        b.floor_gagu_count,
		        b.total_gagu,
		        b.parking,
		        b.lift_yn,
		        b.delay_alert_yn,
		        b.minwon_alert_yn,
		        b.group_id,
		        b.floor_area,
		        b.building_heigh,
		        b.floor_area_ratio,
		        b.memo
		
	</select>
	<insert id="selectBuildingInsert" parameterType="BuildingVO">
		<selectKey keyProperty="buildingId" order="BEFORE"
			resultType="string">
			SELECT 'ZIP'||(LPAD(buildingSeq.nextval,6,'0')) FROM dual
		</selectKey>
		INSERT INTO building_info ( building_id,
									ocr_file_name,
									group_id,
									imdaein_id,
									building_name,
									doro_addr,
									details_addr,
									floor_area,
									floor_area_ratio,
									gunchook_area,
									building_heigh,
									lift_yn,
									total_floor,
									floor_gagu_count,
									total_gagu,
									parking,
									memo,
									delay_alert_yn,
									minwon_alert_yn
									)
		VALUES (#{buildingId},
				#{ocrFileName},
				#{groupId},
				#{imdaeinId},
				#{buildingName},
				#{doroAddr},
				#{detailsAddr},
				#{floorArea},
				#{floorAreaRatio},
				#{gunchookArea},
				#{buildingHeigh},
				#{liftYn},
				#{totalFloor},
				#{floorGaguCount},
				#{totalGagu},
				#{parking},
				#{memo},
				'Y',
				'Y'
				)
	</insert>
	<update id="selectBuildingUpdate" parameterType="BuildingVO">
		UPDATE building_info
		SET delay_alert_yn = #{delayAlertYn},
			minwon_alert_yn = #{minwonAlertYn},
			building_name = #{buildingName},
			doro_addr = #{doroAddr},
			details_addr = #{detailsAddr},
			gunchook_area = #{gunchookArea},
			lift_yn = #{liftYn},
			total_floor = #{totalFloor},
			floor_gagu_count = #{floorGaguCount},
			total_gagu = #{totalGagu},
			parking = #{parking},
			memo = #{memo},
			group_id=#{groupId},
			floor_area = #{floorArea},
			building_heigh = #{buildingHeigh},
			floor_area_ratio = #{floorAreaRatio}
		WHERE building_id = #{buildingId}

	</update>
	<delete id="selectBuildingDelete" parameterType="String">
		DELETE FROM building_info
		WHERE building_id =#{buildingId}
	</delete>
	<delete id="selectRoomDelete" parameterType="String">
		DELETE FROM room_info
		WHERE building_id = #{buildingId}
	</delete>

	<select id="getTotalPageCount" resultType="int">
		SELECT count(*)
		FROM building_info
		WHERE imdaein_id = #{imdaeinId}
	</select>

	<insert id="selectRoomInsert" parameterType="RoomVO">
		insert into room_info(	
								room_id,
								room_no,
								floor,
								ipju_state,
								building_id
								)	
		VALUES 		(
					#{buildingId}||#{roomNo}||room_info_seq.nextval,
					#{roomNo},
					#{floor},
					-1,
					#{buildingId}
					)
	</insert>

	<!-- 파일 삭제 -->
	<delete id="selectDeleteFileName" parameterType="String"> 
		DELETE FROM file_info 
		WHERE file_name = #{fileName} 
	</delete> 
	<!-- 특정 빌딩에 속한 파일 정보 조회 -->
	<select id="selectFileNamesByGroupId" resultType="String"> 
		SELECT file_name 
		FROM file_info 
		WHERE group_id= #{groupId} 
	</select> 

	
	
	<!-- 임대인 아이디 -> 건물리스트 조회 -->
	<select id="selectImdaeinBuildingList">
		SELECT *
		FROM
		    (SELECT 
		      building_id
		      ,building_name
		      ,doro_addr
		      ,memo
		      ,ROW_NUMBER() OVER (ORDER BY building_id DESC) AS row_num
		    FROM building_info 
		    WHERE imdaein_id = #{imdaeinId})
		WHERE row_num BETWEEN (#{paging.page} - 1) * #{paging.recordSize} + 1 AND #{paging.page} * #{paging.recordSize}
		</select>
	<!-- 방 정보 조회 -->
	<select id="selectRoom" resultType="RoomVO">
		SELECT room_id,
			   room_no,
			   floor
		FROM room_info
		WHERE building_id = #{buildingId}
		ORDER BY floor
	</select>
	
	<!-- 방 수정시 방이 존재하면 업데이트 -->
	<update id="selectRoomUpdate" parameterType="RoomVO">
		UPDATE room_info
		SET room_no=#{roomNo}
		WHERE room_id =#{roomId}
	</update>
	<delete id="selectRoomInfoDelete" parameterType="RoomVO">
		DELETE FROM room_info
		WHERE room_id = #{roomId}
	</delete>
	<insert id="selectRoomInfoInsert" parameterType="RoomVO">
		INSERT INTO room_info(	
								room_id,
								room_no,
								floor,
								ipju_state,
								building_id
								)	
		VALUES 		(
					#{buildingId}||#{roomNo}||room_info_seq.nextval,
					#{roomNo},
					#{floor},
					-1,
					#{buildingId}
					)
	</insert>

</mapper>
