<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saeipman.app.gwanlibi.mapper.GwanlibiMapper">

	<!-- 임대인의 건물별 전원, 금월 관리비 목록, 페이징 처리-->
	<select id="selectMonthGwanlibiByBuildingList">
	
		SELECT b.*
		FROM   ( SELECT ROWNUM rn,
		                a.*
		         FROM  ( SELECT   b.building_id,
		                          b.building_name,
		                          p.total_money previous_month,
		                          t.total_money this_month,
		                          t.payment_month
		                 FROM     building_info b LEFT OUTER JOIN month_gwanlibi t
		                                          ON   b.building_id = t.building_id AND TO_CHAR(t.payment_month, 'yymm') = TO_CHAR(sysdate, 'yymm')
		                                          LEFT OUTER JOIN month_gwanlibi p
		                                          ON   b.building_id = p.building_id AND TO_CHAR(p.payment_month, 'yymm') = TO_CHAR(sysdate, 'yymm') -1
		                 WHERE    b.imdaein_id = #{imdaeinId}
		                 ORDER BY b.building_name ) a
		         WHERE   ROWNUM <![CDATA[<=]]> #{dto.pageNum} * #{dto.amount} ) b
		WHERE    rn > (#{dto.pageNum} - 1) * #{dto.amount}
	
	</select>
	
	
	
	<!-- 페이징 -->	
	<select id="getBuildingTotalCount">

		SELECT COUNT(*)
		FROM   building_info
		WHERE  imdaein_id = #{imdaeinId}

	</select>
	
	
	
	<!-- 월별 관리비 상세 내역 history -->	
	<select id="selectGwanlibiDetailsBill">		
	
		SELECT   bi.building_id
		       , bi.building_name
		       , bgi.gwanlibi_name
		       , gd.gwanlibi_item_money
		       , mg.payment_month
		       , mg.month_gwanlibi_no
		       , mg.gagu_gwanlibi
		       , mg.total_money
		       , (gd.gwanlibi_item_money/bi.total_gagu) gwanlibi_by_gagu
		FROM     gwanlibi_details gd JOIN building_gwanlibi_item bgi
		                             ON   (gd.building_id = bgi.building_id AND gd.gwanlibi_item_no = bgi.gwanlibi_item_no)
		                             
		                             JOIN month_gwanlibi mg
		                             ON   (gd.building_id = mg.building_id
		                             AND mg.month_gwanlibi_no = gd.month_gwanlibi_no
		                             AND TO_CHAR(mg.payment_month, 'yyMM') = TO_CHAR(#{paymentMonth}, 'yyMM'))
		                             
		                             JOIN building_info bi
		                             ON   gd.building_id = bi.building_id
		WHERE    gd.building_id = #{buildingId}
		ORDER BY bgi.gwanlibi_name
		
	</select>

	
	<!-- 기본 관리비 목록 -->
	<select id="selectBasicGwanlibiList">
	
		SELECT gwanlibi_name
		FROM   basic_gwanlibi_item
		
	</select>
	
	<!-- 건물 관리비 항목 리스트 설정 -->
	<select id="selectItemList" >
	
		SELECT   gwanlibi_item_no,
		         building_id,
		         gwanlibi_name,
		         variable_yn,
		         fixed_price,
		         version
		FROM     building_gwanlibi_item
		WHERE    building_id = #{buildingId}
		AND      version = (SELECT NVL(MAX(version), 0)
		                    FROM   building_gwanlibi_item)
		ORDER BY gwanlibi_item_no
		
	</select>
	
	
	
	<!-- 관리비 항목 버전 -->
	<select id="selectUpdateVesion">
		SELECT (NVL(MAX(version), 0)) + 1
		FROM   building_gwanlibi_item
		WHERE  building_id = #{buildingId}
	</select>
	
	<!-- 관리비 항목 등록 -->
	<insert id="insertItems">

		<selectKey keyProperty="gwanlibiItemNo" order="BEFORE" resultType="int">
			SELECT (NVL(MAX(gwanlibi_item_no), 0)) + 1
			FROM   building_gwanlibi_item
		</selectKey>		

		INSERT INTO
			building_gwanlibi_item ( gwanlibi_item_no
								   , building_id
								   , gwanlibi_name
								   , variable_yn
								   , version
								   , fixed_price )
		VALUES ( #{gwanlibiItemNo}
			   , #{buildingId}
			   , #{gwanlibiName}
			   , #{variableYn}
			   , #{version}
			   , #{fixedPrice} )

	</insert>
	
	<!-- 정산한 관리비 등록 -->
	<!-- INSERT 중에는 값을 읽을 수 없어서 MAX() 대신 시퀀스를 사용한다. -->
	<insert id="insertGwanlibi">		
		<selectKey order="BEFORE" resultType="string" keyProperty="monthGwanlibiInfo.monthGwanlibiNo" >
			SELECT GET_MGWANLIBI_NO() FROM DUAL
		</selectKey>
			INSERT ALL
			    INTO month_gwanlibi ( month_gwanlibi_no
			    				    , building_id
			    				    , total_money
			    				    , payment_month
			    				    , gagu_gwanlibi )
			    VALUES ( #{monthGwanlibiInfo.monthGwanlibiNo}
					   , #{monthGwanlibiInfo.buildingId}
					   , #{monthGwanlibiInfo.totalMoney}
					   , ADD_MONTHS(SYSDATE, -1)
					   , #{monthGwanlibiInfo.gaguGwanlibi} )
					   
		    <foreach collection="list" item="item">
		    INTO gwanlibi_details ( gwanlibi_details_no
		    					  , building_id
		    					  , month_gwanlibi_no
		    					  , gwanlibi_item_no
		    					  , gwanlibi_item_money )
		    VALUES ( GET_GWANDETAIL_NO()
		    	   , #{item.buildingId}
		    	   , #{monthGwanlibiInfo.monthGwanlibiNo}
		    	   , #{item.gwanlibiItemNo}
		    	   , #{item.fixedPrice} )
		    </foreach>
		SELECT *
		FROM   dual
	</insert>
	
	<!-- 총 가구수 -->
	<select id="selectToTalGagu">
		SELECT total_gagu
		FROM   building_info
		WHERE  building_id = #{buildingId}
	</select>
	
	<!-- month_gwnalibi 데이터 개수 : 데이터가 있으면 수정, 없으면 등록 -->
	<select id="getCountingMonthGwanlibiData">
		SELECT count(*)
		FROM   month_gwanlibi
		WHERE  building_id = #{buildingId} AND TO_CHAR(payment_month, 'yyyy-MM') = #{paymentMonth};
	</select>
	

</mapper>