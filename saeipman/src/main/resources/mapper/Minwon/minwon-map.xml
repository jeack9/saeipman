<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saeipman.app.minwon.mapper.MinwonMapper">
	
	<sql id="criteria">
	  <trim prefix="(" suffix=") AND " prefixOverrides="OR">
	    <foreach item='type' collection="typeArr">
	      <trim prefix="OR">
	       <choose>
	         <when test="type == 'T'.toString()">
	           title like '%'||#{keyword}||'%'
	         </when>
	         <when test="type == 'C'.toString()">
	           content like '%'||#{keyword}||'%'
	         </when>
	         <when test="type == 'W'.toString()">
	            room_no like '%'||#{keyword}||'%'
	         </when>
	       	 <!-- 복합 조건 추가 -->
	         <when test="type == 'TC'.toString()">
	           title like '%'||#{keyword}||'%' OR content like '%'||#{keyword}||'%'
	         </when>
	         <when test="type == 'TW'.toString()">
	           title like '%'||#{keyword}||'%' OR room_no like '%'||#{keyword}||'%'
	         </when>
	         <when test="type == 'TWC'.toString()">
	           title like '%'||#{keyword}||'%' OR content like '%'||#{keyword}||'%' OR room_no like '%'||#{keyword}||'%'
	         </when>
	       </choose>
	      </trim>
	    </foreach>
	  </trim>
	</sql>
	
	<!-- 전체조회 -->
	<select id="selectMinwonAll" resultType="MinwonVO">

	
	select * from (   select rownum rn ,a.*         from (
         
      SELECT 
	            M.POST_NO, 
	            M.TITLE, 
	            M.CONTENT,
	            CASE 
					WHEN M.ACCEPT_STATE = 0 THEN '접수전'
					WHEN M.ACCEPT_STATE = 1 THEN '접수중'
					WHEN M.ACCEPT_STATE = 2 THEN '처리 완료'
	    	    END AS ACCEPT_STATE,
	            M.GROUP_ID,
	            M.REG_DATE, 
	            
	            R.ROOM_NO,
	            r.BUILDING_ID  
            
      	 from room_info r 
      	 join constract_info c  on c.room_id = r.room_id
         join minwon m on m.room_id = c.room_id
            
		where R.BUILDING_ID = #{buildingId}
	 	<include refid="criteria"></include>
      	order by post_no desc
                
 	)a      where  rownum <![CDATA[ <= ]]> #{pageNum} * #{amount}  
 	)b      where rn  > (#{pageNum} -1) * #{amount}
 	
 	
	</select>
	<!-- 전체건수 -->
	<select id="getTotalCount" resultType="int">
	select count(*) from minwon 
	where 
	<include refid="criteria"></include>
	
	post_no > 0 
	</select>
	
	<!-- 임대인별 건물 리스트 -->
	<select id="selectBuilding">
		select building_id, building_name, imdaein_id 
		from building_info
		where imdaein_id = #{imdaeinId}
	</select>
	
	
	
	<!-- 단건조회 -->
	<select id="selectMinwonInfo" resultType="MinwonVO">
		SELECT 
		    m.post_no,
		    m.title,
		    m.content,
		    c.category_type AS categoryType, <!-- 카테고리 이름을 가져옴 -->
		    m.GROUP_ID,
		    m.room_no,
		    m.accept_state,
		    m.visits_date1,
		    m.reg_date,
		    m.mod_date,
		    m.alert_type,
		    m.room_id
		FROM 
		    minwon m
		LEFT JOIN 
		    minwon_category c
		ON 
		    m.category = c.category_no  <!-- category 번호를 기준으로 조인 -->
		WHERE 
		    m.post_no = #{postNo}
	</select>

	<!-- 민원처리 업로드 -->
	<update id="updateAcceptState">
	    UPDATE MINWON
	    SET ACCEPT_STATE = #{acceptState}
	    WHERE POST_NO = #{postNo}
	</update>
	
	<!-- 등록 -->
	<insert id="insertMinwon" parameterType="MinwonVO">
		<selectKey keyProperty="postNo" resultType="int" order="BEFORE"><!-- selectKey는 자동생성된 id값을 삽입하기 위해, BEFORE는 삽입 전에 키 값을 생성하는 것을 의미(실제 삽입 작업 전에 실행됨)-->
		select NVL(max(post_no), 0) + 1 <!-- employees 테이블에서 가장 큰 employee_id 값을 가져와서 1을 더한 값을 반환, 만약 employee_id가 존재하지 않는 경우 0이 반환되고 거기에 1을 더해 새로운 employee_id를 생성 -->
		from minwon
		</selectKey>
		insert into minwon
					(
						post_no,
						title,
						content,
						category,
						GROUP_ID,
						ACCEPT_STATE,
						room_no,
						visits_date1,
						reg_date,
						alert_type,
						room_id,
						imchain_id
					)
				values
					(
						#{postNo}
						, #{title}
						, #{content}
						, #{category}
						, #{groupId}
						, 0
						, #{acceptState}
						, #{visitsDate1}
						<choose>
							<when test="regDate != null">
							, #{regDate}
							</when>
							<otherwise>
							, sysdate
							</otherwise>
						</choose>
						,#{alertType}
						,#{roomId}
						,#{imchainId}
					)
	</insert>
	
	<!-- 수정 -->
	<update id="updateMinwon" parameterType="MinwonVO">
		update minwon
		set 
			title = #{title}
			, content = #{content}
			, category = #{category}
			<if test="chumbuImage != null and chumbuImage != ''">
			, GROUP_ID = #{groupId}
			</if>
			, visits_date = #{visitsDate1}
			
		where post_no = #{postNo}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteMinwon" parameterType="int">
		delete from minwon
		where post_no = #{postNo}
	</delete>
	
	<!-- 카테고리 목록 -->
	<select id="selectCategory" resultType="MinwonVO">
		select category_no,
		       category_type
		from minwon_category
	</select>

	<select id="selectFileName">
		select 	fi.file_name as file_name
		FROM minwon bi JOIN file_info fi
		                    ON bi.group_id = fi.group_id  
		WHERE bi.post_no = #{postNo}
	
	</select>

</mapper>
