<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saeipman.app.room.mapper.RoomMapper">
	<resultMap id="RoomResultMap" type="com.saeipman.app.room.service.RoomVO">
		<id column="room_id" property="roomId"/>
		<result column="room_no" property="roomNo"/>
		<result column="floor" property="floor"/>
		<result column="ipju_state" property="ipjuState"/>
		<result column="building_id" property="buildingId"/>
		<result column="deposit" property="deposit"/>
		<result column="m_rent" property="mRent"/>
		<collection property="constractList" ofType="com.saeipman.app.room.service.ConstractVO">
		    <id column="constract_no" property="constractNo"/>
		    <result column="constract_type" property="constractType"/>
		    <result column="deposit" property="deposit"/>
		    <result column="m_rent" property="mRent"/>
		    <result column="pay_type" property="payType"/>
		    <result column="imchain_name" property="imchainName"/>
		    <result column="imchain_phone" property="imchainPhone"/>
		    <result column="imchain_account" property="imchainAccount"/>
		    <result column="imdaein_account" property="imdaeinAccount"/>
		    <result column="constract_date" property="constractDate"/>
		    <result column="exp_date" property="expDate"/>
		    <result column="constract_state" property="constractState"/>
		    <result column="constract_file" property="constractFile"/>
		    <result column="m_rent_date" property="mRentDate"/>
		    <result column="memo" property="memo"/>
		    <result column="room_id" property="roomId"/>
		</collection>
	</resultMap>
	
	<!-- 로그인한 임차인 -> 방,계약 단건조회 -->
	<select id="selectImchainRoom" resultMap="RoomResultMap">
	SELECT
	    c.constract_no
	    ,c.constract_type
	    ,c.deposit
	    ,c.m_rent
	    ,c.pay_type
	    ,c.imchain_name
	    ,c.imchain_phone
	    ,c.imchain_account
	    ,c.imdaein_account
	    ,c.constract_date
	    ,c.exp_date
	    ,c.constract_state
	    ,c.m_rent_date
	    ,c.memo
	    ,c.room_id
	    ,r.room_no
	    ,r.ipju_state
	    ,r.building_id
	FROM
	    constract_info c JOIN room_info r
	        ON c.room_id = r.room_id
	WHERE
	    imchain_phone = #{imchainId}
	ORDER BY c.constract_date desc
	</select>
	
	
	<!-- 방의 계약내역 보기 -->
	<resultMap id="roomConstractHistory" type="com.saeipman.app.room.service.RoomVO">
	<id column="room_id" property="roomId"/>
  	<collection property="constractList" javaType="java.util.ArrayList" column="room_id" ofType="com.saeipman.app.room.service.ConstractVO" select="roomConstractList"/>
	</resultMap>
	<select id="selectRoomInfo" resultMap="roomConstractHistory">
	  SELECT
	    room_id,
	    room_no,
	    floor,
	    ipju_state,
	    building_id,
	    deposit,
	    m_rent
		FROM
		    room_info
		WHERE
		    room_id = #{roomId}
	</select>
	<select id="roomConstractList" resultType="com.saeipman.app.room.service.ConstractVO">
	  SELECT
	    constract_no,
	    constract_type,
	    deposit,
	    m_rent,
	    pay_type,
	    imchain_name,
	    imchain_phone,
	    imchain_account,
	    imdaein_account,
	    constract_date,
	    exp_date,
	    constract_state,
	    constract_file,
	    m_rent_date,
	    memo,
	    room_id
		FROM
		    constract_info
		WHERE
		    room_id = #{roomId}
		ORDER BY
		    constract_date
	</select>
	
	<!-- 방아이디 - 계약목록 페이징 조회 -->
	<select id="roomConstractsPaging">
	SELECT * FROM
	  (SELECT
	    constract_no,
	    constract_type,
	    deposit,
	    m_rent,
	    pay_type,
	    imchain_name,
	    imchain_phone,
	    imchain_account,
	    imdaein_account,
	    constract_date,
	    exp_date,
	    constract_state,
	    constract_file,
	    m_rent_date,
	    memo,
	    room_id
	    ,ROW_NUMBER() OVER (ORDER BY constract_date desc) AS row_num
		FROM
		    constract_info
		WHERE
		    room_id = #{roomId}
		)
	WHERE row_num BETWEEN (#{paging.page} - 1) * #{paging.recordSize} + 1 AND #{paging.page} * #{paging.recordSize}
	</select>
	
	<!-- 방 아이디 -> 계약 토탈 -->
	<select id="roomConstractTotal">
		SELECT COUNT(*)
		FROM constract_info
		WHERE room_id = #{roomId}
	</select>
	
	<!-- 건물선택 -> 방목록 조회 -->
	<select id="selectBuildingRoom">
	 SELECT * FROM (
        SELECT 
            bi.building_name,
            ci.constract_type,
            r.ipju_state,
            r.room_no,
            ci.imchain_name,
            ci.deposit,
            ci.m_rent,
            ci.constract_date,
            ci.exp_date,
            ci.memo,
            ci.constract_no,
            r.room_id,
            ROW_NUMBER() OVER (ORDER BY bi.building_id, r.room_no ASC) AS row_num
        FROM room_info r 
        	JOIN building_info bi 
        		ON r.building_id = bi.building_id
        	LEFT OUTER JOIN constract_info ci 
        		ON r.room_id = ci.room_id AND ci.constract_state = 1
        WHERE bi.imdaein_id = #{room.imdaeinId} 
        <if test="room.buildingId != null and room.buildingId != ''">
        	AND bi.building_id = #{room.buildingId}
        </if>
        <if test="room.ipjuState != 0">
    		AND r.ipju_state = #{room.ipjuState}
    	</if>
    )
    WHERE row_num BETWEEN (#{paging.page} - 1) * #{paging.recordSize} + 1 AND #{paging.page} * #{paging.recordSize}
	</select>
	<!-- 페이징용 건물 방수 조회 -->
	<select id="totalBuildingRoomFilter">
	SELECT COUNT(*)
	FROM room_info r JOIN building_info  bi 
						ON r.building_id = bi.building_id
    				 LEFT OUTER JOIN constract_info ci 
    				 	ON r.room_id = ci.room_id AND ci.constract_state = 1
	WHERE bi.imdaein_id = #{imdaeinId} 
	<if test="buildingId != null and buildingId != ''">
    	AND bi.building_id = #{buildingId}
    </if>
    <if test="ipjuState != 0">
    	AND r.ipju_state = #{ipjuState}
    </if>
	</select>
	
	<!-- 건물 방수 조회 -->
	<select id="totalBuildingRoom">
	SELECT COUNT(*)
	FROM room_info r JOIN building_info  bi 
						ON r.building_id = bi.building_id
    				 LEFT OUTER JOIN constract_info ci 
    				 	ON r.room_id = ci.room_id AND ci.constract_state = 1
	WHERE bi.imdaein_id = #{imdaeinId} 
	<if test="buildingId != null and buildingId != ''">
    	AND bi.building_id = #{buildingId}
    </if>
	</select>
	<!-- 건물 입주 방수 조회 -->
	<select id="buildingIpjuCount">
	SELECT COUNT(*)
	FROM room_info r JOIN building_info  bi 
                    	ON r.building_id = bi.building_id
                 	 JOIN constract_info ci 
                    	ON r.room_id = ci.room_id AND ci.constract_state = 1
	WHERE bi.imdaein_id = #{imdaeinId}
	<if test="buildingId != null and buildingId != ''">
    	AND bi.building_id = #{buildingId}
    </if>
	</select>
	
	<update id="updateIpjuState">
		UPDATE room_info
		SET ipju_state = #{ipjuState}
		WHERE room_id = #{roomId}
	</update>
</mapper>
